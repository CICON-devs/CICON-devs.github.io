"use strict";(self.webpackChunkcicon_docs=self.webpackChunkcicon_docs||[]).push([[549],{4074:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>l});var n=r(4848),i=r(8453);const t={sidebar_position:2},o="Prisma Routes for DB connection",d={id:"api-routes/prisma-routes",title:"Prisma Routes for DB connection",description:"Overview",source:"@site/docs/api-routes/prisma-routes.md",sourceDirName:"api-routes",slug:"/api-routes/prisma-routes",permalink:"/api-routes/prisma-routes",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Cobbler Prices Routes",permalink:"/api-routes/cobbler-routes"},next:{title:"Stripe Test Environment",permalink:"/api-routes/stripe"}},c={},l=[{value:"Overview",id:"overview",level:2},{value:"Routes",id:"routes",level:3},{value:"1. <code>initialize-order/route.ts</code>",id:"1-initialize-orderroutets",level:4},{value:"<strong>POST <code>/api/record-orders/initialize-order</code></strong>",id:"post-apirecord-ordersinitialize-order",level:5},{value:"2. <code>save-customer/route.ts</code>",id:"2-save-customerroutets",level:4},{value:"<strong>POST <code>/api/record-orders/save-customer</code></strong>",id:"post-apirecord-orderssave-customer",level:5},{value:"3. <code>save-items/route.ts</code>",id:"3-save-itemsroutets",level:4},{value:"<strong>POST <code>/api/record-orders/save-items</code></strong>",id:"post-apirecord-orderssave-items",level:5},{value:"Conclusion",id:"conclusion",level:2}];function a(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"prisma-routes-for-db-connection",children:"Prisma Routes for DB connection"})}),"\n",(0,n.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"api/record-orders"})," folder contains API routes responsible for managing orders within the shoe repair app. This includes initializing new orders, saving customer details, and saving items related to those orders. The routes interact with a database using Prisma ORM to create, update, and retrieve order-related data."]}),"\n",(0,n.jsx)(s.h3,{id:"routes",children:"Routes"}),"\n",(0,n.jsxs)(s.h4,{id:"1-initialize-orderroutets",children:["1. ",(0,n.jsx)(s.code,{children:"initialize-order/route.ts"})]}),"\n",(0,n.jsx)(s.p,{children:'This route initializes a new order in the shoe repair app. It takes input such as the prompt and fault information, then stores the order in the database with a default status of "Pending".'}),"\n",(0,n.jsx)(s.h5,{id:"post-apirecord-ordersinitialize-order",children:(0,n.jsxs)(s.strong,{children:["POST ",(0,n.jsx)(s.code,{children:"/api/record-orders/initialize-order"})]})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Purpose"}),": Creates a new order in the database."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Input"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"prompt"}),": The text description provided by the customer."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"fault_information"}),": Detailed fault information provided by the customer."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Example input:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "prompt": "My shoes have a tear on the side.",\n  "fault_information": {\n    "fault_type": "Tear",\n    "location": "Side",\n    "severity": "Medium"\n  }\n}\n'})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Steps"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Accepts the input and converts ",(0,n.jsx)(s.code,{children:"fault_information"})," into a JSON string."]}),"\n",(0,n.jsxs)(s.li,{children:["Creates a new order in the ",(0,n.jsx)(s.code,{children:"orders"})," table with the provided data."]}),"\n",(0,n.jsx)(s.li,{children:'Sets the status of the order to "Pending".'}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Response"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["On success, returns the newly created order along with its ",(0,n.jsx)(s.code,{children:"orderId"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"On failure, returns a descriptive error message."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Example Response"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "success": true,\n  "order": {\n    "id": "order_123",\n    "prompt": "My shoes have a tear on the side.",\n    "fault_information": "{\\"fault_type\\":\\"Tear\\",\\"location\\":\\"Side\\",\\"severity\\":\\"Medium\\"}",\n    "created_at": "2024-09-17T10:00:00Z",\n    "updated_at": "2024-09-17T10:00:00Z",\n    "status": "Pending"\n  },\n  "orderId": "order_123"\n}\n'})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Error Responses"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"500: Error initializing order"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h4,{id:"2-save-customerroutets",children:["2. ",(0,n.jsx)(s.code,{children:"save-customer/route.ts"})]}),"\n",(0,n.jsxs)(s.p,{children:["This route saves customer details in the database. It also associates the customer with the corresponding order by updating the ",(0,n.jsx)(s.code,{children:"customer_id"})," in the ",(0,n.jsx)(s.code,{children:"orders"})," table. If the customer already exists (e.g., due to a unique email), the route will handle this scenario."]}),"\n",(0,n.jsx)(s.h5,{id:"post-apirecord-orderssave-customer",children:(0,n.jsxs)(s.strong,{children:["POST ",(0,n.jsx)(s.code,{children:"/api/record-orders/save-customer"})]})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Purpose"}),": Saves customer details and associates them with an order."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Input"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"firstName"}),": Customer's first name."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"lastName"}),": Customer's last name."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"email"}),": Customer's email address."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"phone"}),": Customer's phone number."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"address"}),": Customer's physical address."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"orderId"}),": The ID of the order to associate the customer with."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Example input:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "firstName": "John",\n  "lastName": "Doe",\n  "email": "john.doe@example.com",\n  "phone": "+1234567890",\n  "address": "123 Main Street",\n  "orderId": "order_123"\n}\n'})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Steps"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Creates a new customer in the ",(0,n.jsx)(s.code,{children:"customers"})," table."]}),"\n",(0,n.jsxs)(s.li,{children:["Updates the order with the newly created ",(0,n.jsx)(s.code,{children:"customer_id"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:["Updates all items in the order with the same ",(0,n.jsx)(s.code,{children:"customer_id"}),"."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Response"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["On success, returns the customer information and their ",(0,n.jsx)(s.code,{children:"customerId"}),"."]}),"\n",(0,n.jsx)(s.li,{children:"On failure, returns an appropriate error message (e.g., for duplicate email entries)."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Example Response"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "success": true,\n  "customer": {\n    "id": "customer_456",\n    "first_name": "John",\n    "last_name": "Doe",\n    "email": "john.doe@example.com",\n    "phone": "+1234567890",\n    "address": "123 Main Street"\n  },\n  "customerId": "customer_456"\n}\n'})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Error Responses"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"400: Email is already registered"}),"\n",(0,n.jsx)(s.li,{children:"500: Error saving customer details"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h4,{id:"3-save-itemsroutets",children:["3. ",(0,n.jsx)(s.code,{children:"save-items/route.ts"})]}),"\n",(0,n.jsx)(s.p,{children:"This route saves the items (both services and products) associated with an order. It takes input such as the order ID, selected services, and selected products, and stores them in the database."}),"\n",(0,n.jsx)(s.h5,{id:"post-apirecord-orderssave-items",children:(0,n.jsxs)(s.strong,{children:["POST ",(0,n.jsx)(s.code,{children:"/api/record-orders/save-items"})]})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Purpose"}),": Saves services and products associated with an order."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Input"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"orderId"}),": The ID of the order these items are linked to."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"selectedServices"}),": An array of selected service objects."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"selectedProducts"}),": An array of selected product objects."]}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:"Example input:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "orderId": "order_123",\n  "selectedServices": [\n    { "name": "Heel Repair", "description": "Repair the heel", "price": 20 }\n  ],\n  "selectedProducts": [\n    { "name": "Shoe Polish", "description": "Polish for leather shoes", "price": 10 }\n  ]\n}\n'})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Steps"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Ensures that an order ID and at least one item (service or product) are provided."}),"\n",(0,n.jsxs)(s.li,{children:["Prepares the items and saves them in the ",(0,n.jsx)(s.code,{children:"products_and_services_items"})," table."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Response"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"On success, returns a confirmation that the items were saved."}),"\n",(0,n.jsx)(s.li,{children:"On failure, returns an appropriate error message."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Example Response"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "success": true,\n  "items": {\n    "count": 2\n  }\n}\n'})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Error Responses"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"400: Missing order ID or no valid items to save"}),"\n",(0,n.jsx)(s.li,{children:"500: Error saving services and products"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"record-orders"})," routes provide a streamlined process for managing orders, customers, and their associated items (services and products) within the shoe repair app. These routes allow for order initialization, customer association, and the saving of repair services and products."]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>d});var n=r(6540);const i={},t=n.createContext(i);function o(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);