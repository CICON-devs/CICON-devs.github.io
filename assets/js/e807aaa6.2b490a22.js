"use strict";(self.webpackChunkcicon_docs=self.webpackChunkcicon_docs||[]).push([[596],{3529:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>t,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>d});var n=r(4848),i=r(8453);const c={sidebar_position:1},t="Cobbler Prices Routes",l={id:"api-routes/cobbler-routes",title:"Cobbler Prices Routes",description:"Overview",source:"@site/docs/api-routes/cobbler-routes.md",sourceDirName:"api-routes",slug:"/api-routes/cobbler-routes",permalink:"/api-routes/cobbler-routes",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"API Routes",permalink:"/category/api-routes"},next:{title:"Prisma Routes for DB connection",permalink:"/api-routes/prisma-routes"}},o={},d=[{value:"Overview",id:"overview",level:2},{value:"Routes",id:"routes",level:3},{value:"1. <code>get-prices/route.ts</code>",id:"1-get-pricesroutets",level:4},{value:"<strong>GET <code>/api/cobbler/get-prices</code></strong>",id:"get-apicobblerget-prices",level:5},{value:"2. <code>save-prices/route.ts</code>",id:"2-save-pricesroutets",level:4},{value:"<strong>POST <code>/api/cobbler/save-prices</code></strong>",id:"post-apicobblersave-prices",level:5},{value:"Conclusion",id:"conclusion",level:2}];function a(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"cobbler-prices-routes",children:"Cobbler Prices Routes"})}),"\n",(0,n.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,n.jsxs)(s.p,{children:["The ",(0,n.jsx)(s.code,{children:"api/cobbler"})," folder contains API routes responsible for handling cobbler-related functionality, particularly around fetching and saving prices for cobbler services. These routes interact with Excel files to store and retrieve pricing data, which can be amended by the cobbler as needed."]}),"\n",(0,n.jsx)(s.h3,{id:"routes",children:"Routes"}),"\n",(0,n.jsxs)(s.h4,{id:"1-get-pricesroutets",children:["1. ",(0,n.jsx)(s.code,{children:"get-prices/route.ts"})]}),"\n",(0,n.jsx)(s.p,{children:"This route is responsible for reading an Excel file that contains cobbler pricing data and returning it as JSON. The Excel file includes details such as the type of shoes, materials used, faults, and the price for repairs."}),"\n",(0,n.jsx)(s.h5,{id:"get-apicobblerget-prices",children:(0,n.jsxs)(s.strong,{children:["GET ",(0,n.jsx)(s.code,{children:"/api/cobbler/get-prices"})]})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Purpose"}),": Fetches cobbler pricing details from an Excel file and returns the data as JSON."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Excel Columns"}),":"]}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"Shoes"}),"\n",(0,n.jsx)(s.li,{children:"Material"}),"\n",(0,n.jsx)(s.li,{children:"Part of Item"}),"\n",(0,n.jsx)(s.li,{children:"Fault"}),"\n",(0,n.jsx)(s.li,{children:"Fix"}),"\n",(0,n.jsx)(s.li,{children:"Size"}),"\n",(0,n.jsx)(s.li,{children:"Price"}),"\n",(0,n.jsx)(s.li,{children:"Price Pair"}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Steps"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Reads an Excel file from the ",(0,n.jsx)(s.code,{children:"public"})," directory (",(0,n.jsx)(s.code,{children:"prices.xlsx"}),")."]}),"\n",(0,n.jsx)(s.li,{children:"Logs available sheet names for debugging purposes."}),"\n",(0,n.jsx)(s.li,{children:"Converts the first worksheet into a JSON object, skipping the header row."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Response"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"If successful, returns the prices as JSON."}),"\n",(0,n.jsx)(s.li,{children:"If an error occurs, returns a descriptive error message with an appropriate HTTP status code."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Example Response"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "prices": [\n    {\n      "shoes": "Boots",\n      "material": "Leather",\n      "part_of_item": "Sole",\n      "fault": "Tear",\n      "fix": "Stitching",\n      "size": "Medium",\n      "price": 50,\n      "price_pair": 90\n    },\n    ...\n  ]\n}\n'})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Error Responses"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"404: Excel file not found"}),"\n",(0,n.jsx)(s.li,{children:"500: Worksheet not found or other server errors"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsxs)(s.h4,{id:"2-save-pricesroutets",children:["2. ",(0,n.jsx)(s.code,{children:"save-prices/route.ts"})]}),"\n",(0,n.jsx)(s.p,{children:"This route allows cobblers to save or update their pricing data. The data is sent from the client as JSON, converted into an Excel format, and saved to a new file."}),"\n",(0,n.jsx)(s.h5,{id:"post-apicobblersave-prices",children:(0,n.jsxs)(s.strong,{children:["POST ",(0,n.jsx)(s.code,{children:"/api/cobbler/save-prices"})]})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Purpose"}),": Saves cobbler pricing data to a new Excel file."]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Input"}),":\nThe request body contains an array of objects, each representing a pricing record:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "prices": [\n    {\n      "shoes": "Boots",\n      "material": "Leather",\n      "part_of_item": "Sole",\n      "fault": "Tear",\n      "fix": "Stitching",\n      "size": "Medium",\n      "price": 50,\n      "price_pair": 90\n    }\n  ]\n}\n'})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Steps"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Receives the prices from the request body."}),"\n",(0,n.jsx)(s.li,{children:'Creates a new Excel workbook and adds a worksheet titled "Prices".'}),"\n",(0,n.jsx)(s.li,{children:"Adds the appropriate headers: Shoes, Material, Part of Item, Fault, Fix, Size, Price, Price for Pair."}),"\n",(0,n.jsx)(s.li,{children:"Iterates over the pricing data and populates the worksheet with rows."}),"\n",(0,n.jsxs)(s.li,{children:["Saves the updated Excel file to a new directory (",(0,n.jsx)(s.code,{children:"./new_directory/Updated_Prices.xlsx"}),")."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Response"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"If successful, returns a success message."}),"\n",(0,n.jsx)(s.li,{children:"If an error occurs, returns an error message with an appropriate HTTP status code."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Example Response"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "success": true,\n  "message": "Prices saved successfully!"\n}\n'})}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:["\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Error Responses"}),":"]}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"500: Error saving prices"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,n.jsx)(s.p,{children:"These two routes provide the essential functionality for cobblers to fetch and update their service pricing, ensuring the data is securely stored in Excel format and easily accessible through the API."})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>t,x:()=>l});var n=r(6540);const i={},c=n.createContext(i);function t(e){const s=n.useContext(c);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),n.createElement(c.Provider,{value:s},e.children)}}}]);