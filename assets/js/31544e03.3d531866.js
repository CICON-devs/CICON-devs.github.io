"use strict";(self.webpackChunkcicon_docs=self.webpackChunkcicon_docs||[]).push([[634],{9298:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});var i=t(4848),r=t(8453);const s={},a="Payment Integration Guide",o={id:"guides/payment-integration",title:"Payment Integration Guide",description:"The CICON AI Shoe Repair App uses Stripe for payment processing. This guide will walk you through the integration of Stripe for handling payments in the app.",source:"@site/docs/guides/payment-integration.md",sourceDirName:"guides",slug:"/guides/payment-integration",permalink:"/guides/payment-integration",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Cobbler Onboarding Guide",permalink:"/guides/cobbler-onboarding"},next:{title:"Themes",permalink:"/category/themes"}},c={},l=[{value:"Flow Overview",id:"flow-overview",level:2},{value:"PaymentIntent Creation",id:"paymentintent-creation",level:2},{value:"Example Response",id:"example-response",level:3},{value:"Frontend Payment Flow",id:"frontend-payment-flow",level:2},{value:"Payment Success",id:"payment-success",level:3},{value:"Payment Requires Capture",id:"payment-requires-capture",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"payment-integration-guide",children:"Payment Integration Guide"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"CICON AI Shoe Repair App"})," uses Stripe for payment processing. This guide will walk you through the integration of Stripe for handling payments in the app."]}),"\n",(0,i.jsx)(n.h2,{id:"flow-overview",children:"Flow Overview"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Create a PaymentIntent"}),": A PaymentIntent is created for each transaction to represent the payment process."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Confirm Payment"}),": The payment is confirmed when the user provides their card details."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Handle Payment Success/Failure"}),": Stripe handles the payment, and the app is updated accordingly."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"paymentintent-creation",children:"PaymentIntent Creation"}),"\n",(0,i.jsxs)(n.p,{children:["To create a PaymentIntent, make a request to the ",(0,i.jsx)(n.code,{children:"/api/stripe/payment-intent"})," endpoint. This will create a PaymentIntent on Stripe and return the ",(0,i.jsx)(n.code,{children:"clientSecret"}),", which is used to confirm the payment."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-http",children:'POST /api/stripe/payment-intent\n{\n  "amount": 5000, // Amount in pennies\n  "connectedAccountId": "acct_12345"\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"example-response",children:"Example Response"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "clientSecret": "pi_random_payment_intent_id"\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"frontend-payment-flow",children:"Frontend Payment Flow"}),"\n",(0,i.jsxs)(n.p,{children:["The payment process is handled using ",(0,i.jsx)(n.strong,{children:"Stripe Elements"}),". A ",(0,i.jsx)(n.code,{children:"CardElement"})," is used to securely collect the user\u2019s card details, and the payment is confirmed using the ",(0,i.jsx)(n.code,{children:"clientSecret"})," obtained from the PaymentIntent."]}),"\n",(0,i.jsx)(n.p,{children:"Here\u2019s a simplified example of confirming a payment:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\n  payment_method: {\n    card: elements.getElement(CardElement),\n  },\n});\n"})}),"\n",(0,i.jsx)(n.h3,{id:"payment-success",children:"Payment Success"}),"\n",(0,i.jsx)(n.p,{children:"If the payment is successful:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "status": "succeeded"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"You can then proceed with your post-payment logic, such as updating the order status or displaying a confirmation to the user."}),"\n",(0,i.jsx)(n.h3,{id:"payment-requires-capture",children:"Payment Requires Capture"}),"\n",(0,i.jsx)(n.p,{children:"If the payment is on hold (requires confirmation from the cobbler), it will return:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "status": "requires_capture"\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"In this case, the payment is held until the cobbler confirms the price, and Stripe captures the payment later."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);